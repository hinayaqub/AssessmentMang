<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xjXc+Y2TBQAAAABJRU5ErkJggg==
</value>
  </data>
</root>